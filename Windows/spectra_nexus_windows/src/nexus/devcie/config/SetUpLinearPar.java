/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nexus.devcie.config;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import nexus.main.compent.FileDialogHelp;
import sps.app.std.LinearParameterHelper;
import sps.control.manager.ISpDevice;
import sps.dev.data.SSLinearParameter;

/**
 *
 * @author Administrator
 */
public class SetUpLinearPar extends javax.swing.JPanel {

    /**
     * Creates new form ULPSetPanel
     */
    public SetUpLinearPar() {
        initComponents();
//        this.Button_Import.setText("导入非线性数据");
        this.Button_Export.setText("导出数据");
    }

    private ISpDevice dev;

    public void SetCollector(ISpDevice dev) {//ISPDevConfig config) {
        this.dev = dev;
        try {
            showPar(dev.GetLinearPar());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(SetUpLinearPar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showPar(SSLinearParameter par) {
        this.lineartable.setModel(new AbstractTableModel() {
            @Override
            public int getRowCount() {
                return par.NodeKNumber;
            }

            @Override
            public int getColumnCount() {
                return 2;
            }

            @Override
            public Object getValueAt(int i, int i1) {
                if (i1 == 0) {
                    return par.ADValueArray[i];
                } else {
                    return par.KParArray[i];
                }
            }
        });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        Button_Import = new javax.swing.JButton();
        Button_Export = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lineartable = new javax.swing.JTable();

        jToggleButton1.setText("jToggleButton1");

        Button_Import.setText("import");
        Button_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ImportActionPerformed(evt);
            }
        });

        Button_Export.setText("export");
        Button_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ExportActionPerformed(evt);
            }
        });

        lineartable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(lineartable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(Button_Import, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Button_Import)
                    .addComponent(Button_Export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Button_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ExportActionPerformed
         File file = FileDialogHelp.GetFilePath(LinearParameterHelper.fileEndMark);
        if (file == null) {
            return;
        }
        try {
            LinearParameterHelper.WriteLinearParameter(dev.GetLinearPar(), file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(SetUpLinearPar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_ExportActionPerformed

    private void Button_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ImportActionPerformed
        File file = FileDialogHelp.GetFilePath(LinearParameterHelper.fileEndMark);
        if (file == null) {
            return;
        }
        try (ISpDevice tdev = this.dev) {
            tdev.Open();
            SSLinearParameter ReadLinearParameter = LinearParameterHelper.ReadLinearParameter(file);
            tdev.SetLinearPar(ReadLinearParameter);
            showPar(ReadLinearParameter);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(SetUpLinearPar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_ImportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Export;
    private javax.swing.JButton Button_Import;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable lineartable;
    // End of variables declaration//GEN-END:variables
}

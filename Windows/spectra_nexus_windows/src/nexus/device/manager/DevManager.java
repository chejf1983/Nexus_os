/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nexus.device.manager;

import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import nahon.comm.faultsystem.LogCenter;
import sps.control.manager.SpDevManager;
import sps.platform.SpectralPlatService;

/**
 *
 * @author Administrator
 */
public class DevManager extends javax.swing.JPanel {

    // <editor-fold defaultstate="collapsed" desc="初始化代码"> 
    private final SpDevManager devmanager = SpectralPlatService.GetInstance().GetSingleDevManager();

    /**
     * Creates new form DevManager
     */
    public DevManager() {
        initComponents();

        //初始化设备列表
        this.InitUI();

        this.InitLanguange();
    }

    //初始化设备列表
    private void InitUI() {

        //设置窗口ICON
        this.Frame_list.setFrameIcon(null);

        /* 初始化设备列表皮肤 */
        this.List_DeviceName.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList list,
                    Object value, int index, boolean isSelected,
                    boolean cellHasFocus) {

                setText(value.toString());

                java.net.URL disurl;
                /* 如果设备有控制器在使用，更新链接图片 */
                if (isSelected) {
                    disurl = DevManager.class.getResource("/nexus/device/resources/connect.png");
                } else {
                    disurl = DevManager.class.getResource("/nexus/device/resources/disconnect.png");
                }

                setIcon(new ImageIcon(disurl));
                if (isSelected) {
                    /* reflash device list */
                    setBackground(list.getSelectionBackground());
                    setForeground(list.getSelectionForeground());
                } else {
                    // 设置选取与取消选取的前景与背景颜色.  
                    setBackground(list.getBackground());
                    setForeground(list.getForeground());
                }
                return this;
            }
        });

        //设备列表，显示设备名称
        this.List_DeviceName.setModel(new AbstractListModel() {
            @Override
            public int getSize() {
                return devmanager.GetDevList().length;
            }

            @Override
            public Object getElementAt(int index) {
                if (devmanager.GetDevList()[index] != null) {
                    return devmanager.GetDevList()[index].GetDevInfo().eia.DeviceName;
                } else {
                    return "Unknow";
                }
            }
        });
    }

    private void InitLanguange() {
        //注册语言包
        Frame_list.setTitle("设备列表");
        Button_Detect.setText("搜索设备");
    }
    // </editor-fold> 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Frame_list = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_DeviceName = new javax.swing.JList();
        Button_Detect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DeviceInfo = new javax.swing.JTable();

        Frame_list.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        Frame_list.setVisible(true);

        List_DeviceName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                List_DeviceNameMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(List_DeviceName);

        Button_Detect.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        Button_Detect.setText("Detect");
        Button_Detect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_DetectActionPerformed(evt);
            }
        });

        DeviceInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(DeviceInfo);

        javax.swing.GroupLayout Frame_listLayout = new javax.swing.GroupLayout(Frame_list.getContentPane());
        Frame_list.getContentPane().setLayout(Frame_listLayout);
        Frame_listLayout.setHorizontalGroup(
            Frame_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(Button_Detect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        Frame_listLayout.setVerticalGroup(
            Frame_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_listLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Detect))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Frame_list)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Frame_list)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    //搜索设备
    private void Button_DetectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_DetectActionPerformed
        //关闭搜索按钮，避免重复触发
        SpectralPlatService.GetInstance().GetAppManager().RunCommand(new Runnable() {
            @Override
            public void run() {
                Logger.getGlobal().log(Level.INFO, "进入搜索进程");

                //搜索所有IO
                if (devmanager.SearchDevice()) {
                    //获取获得的设备
                    if (devmanager.GetDevList().length > 0) {
                        //默认连接第一个设备
                        SetSelectDev(0);
                    } else {
                        LogCenter.Instance().SendFaultReport(Level.SEVERE, "没有找到设备");
                    }
                }
            }
        });
    }//GEN-LAST:event_Button_DetectActionPerformed

    private void SetSelectDev(int index) {
        try {
            devmanager.SetSelectIndex(index);
            this.List_DeviceName.setSelectedIndex(devmanager.GetSelectIndex());
            //因为列表上还有设备控制状态灯
            List_DeviceName.updateUI();
            this.DeviceInfo.setModel(new EIAModel(devmanager.GetSelectDev().GetDevInfo().eia));
            JTableHeader header = DeviceInfo.getTableHeader();
            for (int i = 0; i < EIAModel.column_width.length; i++) {
                TableColumn column = DeviceInfo.getColumnModel().getColumn(i);
                header.setResizingColumn(column); // 名称
                column.setWidth(EIAModel.column_width[i]);
            }
        } catch (Exception ex) {
            this.DeviceInfo.setModel(new EIAModel(null));
            LogCenter.Instance().SendFaultReport(Level.SEVERE, ex);
        }
    }

    //切换设备
    private void List_DeviceNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_DeviceNameMouseClicked
        int setlectIndex = this.List_DeviceName.getSelectedIndex();
        if (setlectIndex >= 0) {
            SetSelectDev(setlectIndex);
        }
    }//GEN-LAST:event_List_DeviceNameMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Detect;
    private javax.swing.JTable DeviceInfo;
    private javax.swing.JInternalFrame Frame_list;
    private javax.swing.JList List_DeviceName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
